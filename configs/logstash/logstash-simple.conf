input {
	syslog {
		port => 5140
	}
 }
filter {
	grok {
		id => "delay-grok-filter"
		match => { "message" => "Delay  %{NUMBER:toVsDelayVal} %{NUMBER:toServerDelayVal} (?<vsAddress>.*) (?<serverAddress>.*)" } 
		add_field => { "type" => "delay_log_like" }
		tag_on_failure => []
	}

	if "_grokparsefailure_sysloginput" in [tags] and "delay_log_like" != [type] {
		grok {
			id => "match-syslog"
			match => {"message" => [
				"<%{NONNEGINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}",
				"<%{NONNEGINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} (?:%{WORD:syslog_hostname_prefix}/)%{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}"]     }
		}

		syslog_pri {}

		mutate {
			rename => {
				"syslog_facility_code" => "facility"
				"syslog_severity_code" => "severity"
				"syslog_facility" => "facility_label"
				"syslog_severity" => "severity_label"
				"syslog_pri" => "priority"
				"syslog_hostname" => "logsource"
				"syslog_timestamp" => "timestamp"
				"syslog_message" => "fullContent"
			}

			remove_field => ["syslog_severity_code","syslog_facility_code"]
		}

		date {
			match => ["timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss"]
			target => ["timestamp"]
		}
	} else {
		date {
			match => ["timestamp","MMM  dd HH:mm:ss","MMM dd HH:mm:ss"]
			target => ["timestamp"]
			add_field => { "fullContent" => "%{message}" }
		}

		grok {
			id => "split-message-body"
			match => { "message" => ".*?\[\d{1,2}/[A-Z][a-z]{2}/20\d{2}.*\].*" }
			remove_field => [ "fullContent" ]
			tag_on_failure => []
		}
		grok {
			id => "join-message-body"
			match => { "message" => "(?<before>.*?)\[\d{1,2}/[A-Z][a-z]{2}/20\d{2}.*\](?<after>.*)" }
			add_field => { "fullContent" => "%{before}%{after}" }
			tag_on_failure => []
		}
	}
}
output {
	stdout {
		codec => rubydebug 
	}
	elasticsearch {
		hosts => ["//127.0.0.1"]
	}
      	kafka {
		bootstrap_servers => "localhost:9092"
        	codec => "json"
        	topic_id => "my-replicated-topic"
	}
}
