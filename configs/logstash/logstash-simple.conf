input { 
	file {
		path => ["/logs/**/gtm.log","/logs/**/ltm.log","/logs/**/gtm.*.log","/logs/**/ltm.*.log"]
		start_position => "beginning"
	}
	syslog {
		port => 5140
	}
 }
filter {
	grok {
		id => "delay-grok-filter"
		match => { "message" => "Delay  %{NUMBER:toVsDelayVal} %{NUMBER:toServerDelayVal} (?<vsAddress>.*) (?<serverAddress>.*)" } 
		add_field => { "type" => "delay_log_like" }
		tag_on_failure => []
	}
	date {
		match => ["timestamp","MMM  dd HH:mm:ss","MMM dd HH:mm:ss"]
		target => ["timestamp"]
		add_field => { "fullContent" => "%{message}" }
	}
	grok {
		id => "split-message-body"
		match => { "message" => ".*?\[\d{1,2}/[A-Z][a-z]{2}/20\d{2}.*\].*" }
		remove_field => [ "fullContent" ]
		tag_on_failure => []
	}
	grok {
                id => "join-message-body"
                match => { "message" => "(?<before>.*?)\[\d{1,2}/[A-Z][a-z]{2}/20\d{2}.*\](?<after>.*)" }
                add_field => { "fullContent" => "%{before}%{after}" }
                tag_on_failure => []
        }
}
output {
	stdout {
		codec => rubydebug 
	}
	elasticsearch {
		hosts => ["//127.0.0.1"]
	}
      	kafka {
		bootstrap_servers => "localhost:9092"
        	codec => "json"
        	topic_id => "my-replicated-topic"
	}
}
